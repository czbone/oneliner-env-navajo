- hosts: localhost
  connection: local

  vars_files:
    - vars/main.yml
    - vars/www_{{ ansible_os_family }}.yml

  vars:
    ### PHP version ###
    php_version: '7.3'
    php_default_version_debian: "7.3"

    ### MariaDB version ###
    mariadb_version: '10.4'

    # sample database for Japanese testing
    mariadb_databases:
      - name: "testdb"
        collation: utf8_general_ci
    mariadb_users:
      - name: "testuser"
        password: "test"
        priv: "testdb.*:ALL"
        host: "127.0.0.1"

    # nodejs
    nodejs_version: "12.x"

    # Magic3 configration
    # change root directory
    magic3_install_path: "/var/www/html/www"

  roles:
    - role: geerlingguy.repo-remi
      when: ansible_os_family == 'RedHat'
    - geerlingguy.ntp
    - geerlingguy.nginx
    - geerlingguy.php-versions
    - geerlingguy.php
    - geerlingguy.php-mysql
    - role: geerlingguy.firewall
      when: ansible_os_family == 'Debian'
    - geerlingguy.nodejs
    - geerlingguy.redis
    - mariadb
    - nginx_build
    - ffmpeg_build
    - magic3

  tasks:
    # Install additional command
    - name: Install additional command for CentOS by yum
      yum:
        name:
          - unzip
      when: ansible_os_family == 'RedHat'
    - name: Install additional command for Ubuntu by apt
      apt:
        name:
          - unzip
      when: ansible_os_family == 'Debian'

    - selinux: state=disabled
      when: ansible_os_family == 'RedHat'
      become: True
    
    # install Japanese environment in Ubuntu
    - name: Install Japanese environment
      apt:
        name:
          - language-pack-ja-base
          - language-pack-ja
          - ibus-mozc
      when: ansible_os_family == 'Debian'

    # fix mariadb config file
    - name: Install server config file
      template:
        src: etc_my.cnf.d_server.cnf.j2
        dest: "{{ mariadb_config_server }}"
      notify: restart mariadb

    # fix directory ownership for Nginx
    - file: path=/var/log/nginx owner=root group=root mode=0700
      when: ansible_os_family == 'RedHat'
    - file: path=/var/log/php-fpm owner=root group=root mode=0700
      when: ansible_os_family == 'RedHat'
    # fix Nginx log ownership
    - template: src="logrotate_nginx.j2" dest="/etc/logrotate.d/nginx" owner=root group=root mode=0644
      when: ansible_os_family == 'RedHat'
    - file: path="/var/log/nginx/access.log" owner=nginx group=nginx mode=0640
      when: ansible_os_family == 'RedHat'
    - file: path="/var/log/nginx/error.log" owner=nginx group=nginx mode=0640
      when: ansible_os_family == 'RedHat'
      
    # fix PHP directory owner
    - file: path="/var/lib/php/opcache" owner=nginx group=nginx mode=0770
      when: ansible_os_family == 'RedHat'
    - file: path="/var/lib/php/session" owner=nginx group=nginx mode=0770
      when: ansible_os_family == 'RedHat'
    - file: path="/var/lib/php/wsdlcache" owner=nginx group=nginx mode=0770
      when: ansible_os_family == 'RedHat'
    
    # modify nginx config file
    # fix PHP_SELF value problem
    - template: src="fastcgi_params.j2" dest="/etc/nginx/fastcgi_params" owner=root group=root mode=0644
    - template: src="mime.types.j2" dest="/etc/nginx/mime.types" owner=root group=root mode=0644
    
    # add root shell environment
    - template: src="root_bash_profile.j2" dest="/root/.bash_profile" owner=root group=root mode=0644
      when: ansible_os_family == 'RedHat'
    - template: src="root_bash_profile.j2" dest="/root/.profile" owner=root group=root mode=0644
      when: ansible_os_family == 'Debian'
      
    # add php test scripts in default site
    #- template: src="php_index.j2" dest="/var/www/html/index.php"
    #- template: src="php_index2.j2" dest="/var/www/html/index2.php"

    # firewall configuration for RedHat
    - firewalld: service=http permanent=true state=enabled
      when: ansible_os_family == 'RedHat'
    - firewalld: service=https permanent=true state=enabled
      when: ansible_os_family == 'RedHat'
    - name: restart firewalld
      service: name=firewalld state=restarted enabled=yes
      when: ansible_os_family == 'RedHat'

    # make directry for Nodejs
    - name: make Nodejs application directory
      file: path=/var/www/node-app state=directory owner=root group=root mode=0755

    # output completed message
    - name: building completed message
      vars:
        msg: |
             Building Nodejs environment completed!
             Magic3 is located in {{ magic3_install_path }}
             Complete installation by accessing to http://localhost/www
      debug:
        msg: "{{ msg.split('\n')[:-1] }}"
